version: 0.2

env:
  variables:
    PACKAGE_NAME: "compare-diarization"
    BUILD_TIMESTAMP: "$(date +%Y-%m-%d_%H-%M-%S)"
    S3_BUCKET: "codebuild-diarization"
    CUSTOM_PATH_BASE: "build-output"

phases:

  install:
    commands:
      # generate the s3 output folder name
      - export CUSTOM_PATH="${CUSTOM_PATH_BASE}-${CODEBUILD_BUILD_NUMBER}"

      - export DEBIAN_FRONTEND=noninteractive
      - nvidia-smi
      
      - apt-get -qq update
      - uname -a 

      - apt-get install -y cmake curl unzip ffmpeg git mpg123
      - apt-get install -y python3 python3-pip git

      - cmake --version
      - git --version
      
      # replace the github with Oauth token login information in the URL.
      - git config --global url."https://oauth2:${GHAPI}@github.com/".insteadOf "https://github.com/"
   
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip -q awscliv2.zip
      - ./aws/install 1> /dev/null
      - aws --version

      - echo "Checking environment"
      - echo ${API_TOKEN}
      - echo $CODEBUILD_SOURCE_REPO_URL

      - apt-get -qq -o=Dpkg::Use-Pty=0 -y install python3-pip 1> /dev/null
      - python3 --version
      - pip install --upgrade pip
      - pip install --no-cache --upgrade -r requirements.txt


  build:
    commands:
      - set -e # stop build if errors
      - echo "Running models ..."
      - python3 -m src.main
      - find . -maxdepth 2 -type d -ls -name aws -prune

  post_build:
    commands:
      # Upload directly to S3 with custom path
      - aws s3 cp --recursive out/ s3://${S3_BUCKET}/${CUSTOM_PATH}/
      # Optional - create a marker file to make it easier to find latest build
      - echo "Build completed" > build-info.txt
      - aws s3 cp build-info.txt s3://${S3_BUCKET}/${CUSTOM_PATH}/

# Disable the standard artifacts handling
artifacts:
  type: NO_ARTIFACTS
  